plugins {
    id 'sfx-plugin'
    id 'org.openjfx.javafxplugin'
    id 'jacoco'
    id 'org.sonarqube'
}

description = 'Extension allowing to insert alerts inside a SlideshowFX presentation'
version = '1.3-SNAPSHOT'

dependencies {
    api project(':slideshowfx-markup')
    api project(':slideshowfx-plugin')
    api project(':slideshowfx-ui-controls')

    implementation project(':slideshowfx-icons')

    testImplementation "org.mockito:mockito-core:${project.property('dependencies.mockito.version')}"

    integrationTestImplementation "org.testfx:testfx-core:${project.property('dependencies.testfx.version')}"
    integrationTestImplementation "org.testfx:testfx-junit5:${project.property('dependencies.testfx.version')}"
    integrationTestImplementation "org.testfx:openjfx-monocle:${project.property('dependencies.monocle.version')}"
}

javafx {
    modules('javafx.controls', 'javafx.fxml', 'javafx.graphics')
}

sfxPlugin {
    contentExtension = true
    pluginName = "Alert"
    pluginDescription = "Insert alert in slides"
    setupWizardIconName = "EXCLAMATION_TRIANGLE"
}

tasks.register('zipSweetAlertPackage', Zip) {
    archiveFileName = 'sweetalert2.zip'
    destinationDirectory = file("$buildDir/tmp")
    from("$buildDir/tmp/sweetalert-update/sweetalert2") {
        into 'sweetalert2'
    }
}

tasks.register('createSweetAlertPackage') {
    finalizedBy = ['zipSweetAlertPackage']

    doLast {
        def sweetAlertVersion = project.property('dependencies.sweetalert.version')
        def binaryDir = new File("$buildDir/tmp/sweetalert-update")
        def newPackageDir = new File("$binaryDir/sweetalert2", sweetAlertVersion)
        def binary = new File(newPackageDir, 'sweetalert2.all.min.js')

        if (!newPackageDir.exists()) {
            newPackageDir.mkdirs()
        }

        new URL("https://cdn.jsdelivr.net/npm/sweetalert2@$sweetAlertVersion/dist/sweetalert2.all.min.js")
                .withInputStream { input -> binary.withOutputStream { it << input } }
    }
}